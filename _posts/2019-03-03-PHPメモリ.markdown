---
layout: post
title:  "PHPメモリ"
date:   2019-03-03 22:37:00 +0900
categories: [php]
---
# PHPメモリ

php メモリ使用量測定メモ
http://kameryo.hatenablog.com/entry/2015/06/24/110559

質問：PHPメモリーリミットの引き上げに伴う副作用はあるのでしょうか
http://drupal-jp.osdn.jp/main/node/59

Apache/mod_php(prefork)のメモリ管理の仕組みについて教えてください
http://q.hatena.ne.jp/1363183172

phpでバッチ処理は控えるべき？メモリ解放しないよ。
http://takuya-1st.hatenablog.jp/entry/20070509/1178705008

メモリ確保を抑える方法
https://qiita.com/Bentham3314/items/f6b9add766fdf28b1342

### まとめ
モジュール版prefork前提です。

- memory_limit =  1プロセスが利用できるメモリ量の制限
- 負荷 = メモリ使用量 × リクエスト数
- Apache+PHP挙動（モジュール版prefork）
    - PHPの処理が終わっても子プロセスは使い回される（メモリ確保された状態のまま
    - ApacheのMaxRequestsPerChildのリクエスト数に達すると子プロセス終了（メモリ解放
    - メモリを大量に使うPHPプログラムが終わっても、プロセスが終わらない限りはメモリを持ち続ける
        - 対処：
            - MaxRequestsPerChildのリクエスト数設定を変更し早めにプロセス終了させる
            - apache_child_terminateやposix_killで自殺
- リクエストごとのメモリ利用調査
    - memory_get_usage
- メモリ解放
    - mod_php(prefork)では、リクエスト処理が終わるまでメモリを解放しない
        - 長時間のバッチ処理だとメモリが解放されない→メモリを大量に持ってしまう
        - バッチ処理の細切れな生成、消去を短時間に繰り返すようにする
    - 変数はどのタイミングでメモリ解放されるか
        - 基本的には変数がスコープから外れた時点で解放
        - スコープ内でもunset()することにより該当の変数は解放
    - ApacheのMaxRequestsPerChild
        - 設定値はリクエスト数の上限
        - 一定数の接続を受け取った後、子プロセスを殺す
        - 値が小さいとプロセスの消滅・生成回数が増えるので処理効率が悪くなり、一方で大きくするとメモリーリークなどをリセットできずプロセスのメモリ量が膨らんでいく、値は両者のトレード・オフで成り立つ、というのが共通の認識
        - https://mynotebook.h2np.net/post/952
- メモリの強制解放
    - PHPの処理が終了してもメモリの使用量が回復しない場合
    - apache_child_terminate
    - 駄目ならposix_killで直接プロセスを殺す
    - ユースケース：大きなファイル処理を行う場合、子プロセスが残ってしまうとメモリを大量に消費し続ける→プロセスを自分で殺す


### mod_fcgid版の場合

https://ryuzoji.com/archives/574

- MaxProcessCountの設定は必須
- やばい）デフォルトで1000個までプロセスが増殖するので、memory_limitが128MBの時に最大で128GBのメモリを消費する恐れがある
- fcgid環境はプロセス周りに関してはApacheとは別の設定が必要
- 設定要
    - MaxProcessCountディレクティブ：起動できる最大プロセス数を指定
    - IdleTimeout：アイドルとみなされてプロセスが落ちるまでの時間を秒単位で指定
    - ProcessLifeTime：当該cgi-phpプロセスが生存できる最大時間を秒単位で指定
    - IdleScanInterval：上記の生存時間の判定をする間隔を秒単位で指定
    - MaxRequestsPerProcess：一定の回数のリクエストがあった場合にプロセスを落とすようにする

### パーフェクトPHP（memory_limitの説明）
- 1プロセスが利用できるメモリ量の制限
    - プロセス数（リクエスト数） * 設定したメモリ上限分PHPでメモリを使うことになる
- 5.3以降は128MBがデフォルト
- webアプリでは１回のリクエストごとにプロセスが異なる
    - 32MB以上のメモリを消費されることは殆どない
    - 大きなファイル読み込み・ファイルアップロード時制限かかることはある
- 大きめのファイルを読み込む必要がある場合制限無効化（バッチ処理等）

### プロセス調査
ApacheのプロセスがどのPHPプログラムの処理をしているか調べる方法
https://ameblo.jp/itboy/entry-10985322030.html
- PHPには「getmypid」というプロセスIDを取得する関数が存在
- Apache自身のログの設定で、プロセスIDを記録する方法もある


### メモリの強制解放
メモリを使いすぎたPHPから無理やり解放させる
https://qiita.com/smzk/items/a57f2349fff75d1389b8

- PHPの処理が終了してもメモリの使用量が回復しない場合
- apache_child_terminate
    - php.ini：child_terminate設定によって この機能の有効性が制御
        - デフォルトでOFFになっているのでONにする必要がある
    - http://php.net/manual/ja/function.apache-child-terminate.php
    - http://q.hatena.ne.jp/1344756790
    - http://blog.livedoor.jp/php_ref/archives/16486774.html
- posix_kill
    - プロセス自体を殺す


### メモリ確認
PHPに割り当てられたメモリの量を返す
```
memory_get_usage();
```


システムが割り当てた実際のメモリの大きさ (未使用のページも含むもの) を取得
```
memory_get_usage(true);
```

PHP によって割り当てられたメモリの最大値を返す
```
memory_get_peak_usage();
```

システムが割り当てた実際の最大メモリの大きさを取得
```
memory_get_peak_usage(true);
```

### Apacheに割り当て可能なメモリ

Apacheに割り当て可能なメモリ量：
サーバの総メモリ量から、OSのメモリ使用量、キャッシュ・バッファのメモリ使用量、Apache以外に動作させているデータベースなどのプロセスのメモリ使用量を引いたものがApacheに割り当て可能なメモリ使用量
http://www.osscons.jp/jowaki254-218/?block_id=218&active_action=journal_view_main_detail&post_id=206&comment_flag=1


完了後、ApacheまたはPHPは800kbのメモリを解放する必要があります。このように動作しないようです。
https://codeday.me/jp/qa/20181215/68271.html